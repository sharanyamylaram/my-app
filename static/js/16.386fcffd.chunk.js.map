{"version":3,"sources":["products/ProductsHome.js"],"names":["quantity","ProductsHome","state","Details","img","props","isLoggedin","count","recentItems","viewImg","map","item","i","length","console","log","dispatch","saveView","history","push","id","handleChange","e","target","value","handleClick","all","title","desc","price","cartItems","cartImg","alert","window","location","reload","addToCart","this","viewCart","viewRecent","className","href","onClick","style","width","height","src","alt","fontWeight","subcat","fontStyle","to","marginLeft","parseInt","isNaN","fontSize","Component","connect","cartReducer","auth","isLoggedIn","withRouter"],"mappings":"yLAKIA,EAAW,IACTC,E,4MACJC,MAAQ,G,EACRC,QAAU,SAACC,GACT,GAAI,EAAKC,MAAMC,WAAY,CAEzB,IAAIC,EAAQ,EACZ,GAAI,EAAKF,MAAMG,YAAa,CAE1B,IADA,IAAIC,EAAU,EAAKJ,MAAMG,YAAYE,KAAI,SAACC,GAAD,OAAUA,EAAKP,OAC/CQ,EAAI,EAAGA,EAAIH,EAAQI,OAAQD,IAC9BR,GAAOK,EAAQG,IACjBL,IAIJO,QAAQC,IAAIR,GACC,GAATA,GACF,EAAKF,MAAMW,SAASC,YAASb,IAIjC,EAAKC,MAAMa,QAAQC,KAAnB,mBAAoC,EAAKd,MAAMe,UAE/C,EAAKf,MAAMa,QAAQC,KAAK,W,EAG5BE,aAAe,SAACC,GACdtB,EAAWsB,EAAEC,OAAOC,O,EAGtBC,YAAc,SAACC,EAAKtB,EAAKuB,EAAOC,EAAMC,EAAO7B,GAG3C,IAAIO,EAAQ,EACZ,GAAI,EAAKF,MAAMyB,UAAW,CACxB,IAAIC,EAAU,EAAK1B,MAAMyB,UAAUpB,KAAI,SAACC,GAAD,OAAUA,EAAKP,OACtDU,QAAQC,IAAIgB,GAEZ,IAAK,IAAInB,EAAI,EAAGA,EAAImB,EAAQlB,OAAQD,IAC9BR,GAAO2B,EAAQnB,IACjBL,IAONO,QAAQC,IAAIR,GACRA,GAAS,GACXyB,MAAM,yBACNC,OAAOC,SAASC,WAEhB,EAAK9B,MAAMW,SAASoB,YAAUV,EAAKtB,EAAKuB,EAAOC,EAAMC,EAAO7B,IAC5DgC,MAAM,+B,uDAGV,WACEK,KAAKhC,MAAMW,SAASsB,eACpBD,KAAKhC,MAAMW,SAASuB,iB,oBAEtB,WAAU,IAAD,OAEP,OACE,sBAAKC,UAAU,OAAf,UACE,mBACEC,KAAK,GACLC,QAAS,WACP,EAAKvC,QAAQ,EAAKE,MAAMD,MAH5B,SAME,qBACEoC,UAAU,eACVG,MAAO,CAAEC,MAAO,QAASC,OAAQ,SACjCC,IAAKT,KAAKhC,MAAMD,IAChB2C,IAAKV,KAAKhC,MAAMsB,UAGpB,uBAEA,sBAAKa,UAAU,YAAf,UACE,sBAAMG,MAAO,CAAEK,WAAY,UAA3B,SAAwCX,KAAKhC,MAAMsB,QACnD,2CACY,+BAAOU,KAAKhC,MAAM4C,YAG9B,4BACE,yBAAQP,QAASL,KAAKhB,aAAcmB,UAAU,eAA9C,UACE,wBAAQhB,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,oBAGJ,4BACE,uBAAMmB,MAAO,CAAEO,UAAW,UAA1B,0BACWb,KAAKhC,MAAMwB,MADtB,UAIF,sBACEsB,GAAG,IACHX,UAAU,wDACVG,MAAO,CAAES,WAAY,OACrBV,QAAS,WACH,EAAKrC,MAAMC,YACbN,EAAWqD,SAASrD,GAChBsD,MAAMtD,KACRA,EAAW,GAGb,EAAKyB,YACH,EAAKpB,MAAMqB,IACX,EAAKrB,MAAMD,IACX,EAAKC,MAAMsB,MACX,EAAKtB,MAAMuB,KACX,EAAKvB,MAAMwB,MACX7B,GAEFiC,OAAOC,SAASC,UAEhB,EAAK9B,MAAMa,QAAQC,KAAK,WArB9B,SAyBE,mBAAGqB,UAAU,iBAAiBG,MAAO,CAAEY,SAAU,QAAjD,oC,GA5HeC,aA8IZC,uBATS,SAACvD,GACvB,MAAO,CACL4B,UAAW5B,EAAMwD,YAAY5B,UAC7BxB,WAAYJ,EAAMyD,KAAKC,WACvBpD,YAAaN,EAAMwD,YAAYlD,eAKpBiD,CAAyBI,YAAW5D","file":"static/js/16.386fcffd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { addToCart, saveView, viewCart, viewRecent } from \"../actions/auth\";\r\nvar quantity = \" \";\r\nclass ProductsHome extends Component {\r\n  state = {};\r\n  Details = (img) => {\r\n    if (this.props.isLoggedin) {\r\n      //console.log(img);\r\n      var count = 0;\r\n      if (this.props.recentItems) {\r\n        var viewImg = this.props.recentItems.map((item) => item.img);\r\n        for (var i = 0; i < viewImg.length; i++) {\r\n          if (img == viewImg[i]) {\r\n            count++;\r\n          }\r\n        }\r\n\r\n        console.log(count);\r\n        if (count == 0) {\r\n          this.props.dispatch(saveView(img));\r\n        }\r\n      }\r\n      //this.props.dispatch(saveView(img));\r\n      this.props.history.push(`/details/${this.props.id}`);\r\n    } else {\r\n      this.props.history.push(\"/login\");\r\n    }\r\n  };\r\n  handleChange = (e) => {\r\n    quantity = e.target.value;\r\n    //console.log(quantity);\r\n  };\r\n  handleClick = (all, img, title, desc, price, quantity) => {\r\n    //console.log(this.props.cartItems);\r\n    //console.log(all);\r\n    var count = 0;\r\n    if (this.props.cartItems) {\r\n      var cartImg = this.props.cartItems.map((item) => item.img);\r\n      console.log(cartImg);\r\n\r\n      for (var i = 0; i < cartImg.length; i++) {\r\n        if (img == cartImg[i]) {\r\n          count++;\r\n        }\r\n      }\r\n      /* products = [...products, all];\r\n      console.log(products);\r\n      var image = products.map((item) => item.img);*/\r\n    }\r\n    console.log(count);\r\n    if (count >= 1) {\r\n      alert(\"Already added to cart\");\r\n      window.location.reload();\r\n    } else {\r\n      this.props.dispatch(addToCart(all, img, title, desc, price, quantity));\r\n      alert(\"succesfully added to cart\");\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.props.dispatch(viewCart());\r\n    this.props.dispatch(viewRecent());\r\n  }\r\n  render() {\r\n    //console.log(this.props.recentItems);\r\n    return (\r\n      <div className=\"card\">\r\n        <a\r\n          href=\"\"\r\n          onClick={() => {\r\n            this.Details(this.props.img);\r\n          }}\r\n        >\r\n          <img\r\n            className=\"card-img-top\"\r\n            style={{ width: \"250px\", height: \"250px\" }}\r\n            src={this.props.img}\r\n            alt={this.props.title}\r\n          ></img>\r\n        </a>\r\n        <br />\r\n        {/* <span style={{ display: \"none\" }}>{(id = this.props.id)}</span> */}\r\n        <div className=\"card-body\">\r\n          <span style={{ fontWeight: \"bolder\" }}>{this.props.title}</span>\r\n          <p>\r\n            Category: <span>{this.props.subcat}</span>\r\n          </p>\r\n\r\n          <p>\r\n            <select onClick={this.handleChange} className=\"form-control\">\r\n              <option value=\"1\">1</option>\r\n              <option value=\"2\">2</option>\r\n              <option value=\"3\">3</option>\r\n              <option value=\"4\">4</option>\r\n              <option value=\"5\">5</option>\r\n              <option value=\"6\">6</option>\r\n            </select>\r\n          </p>\r\n          <p>\r\n            <span style={{ fontStyle: \"italic\" }}>\r\n              Price: â‚¹{this.props.price}/-\r\n            </span>\r\n          </p>\r\n          <span\r\n            to=\"/\"\r\n            className=\"btn-floating halfway-fab waves-effect waves-light red\"\r\n            style={{ marginLeft: \"40%\" }}\r\n            onClick={() => {\r\n              if (this.props.isLoggedin) {\r\n                quantity = parseInt(quantity);\r\n                if (isNaN(quantity)) {\r\n                  quantity = 1;\r\n                }\r\n                //console.log(quantity);\r\n                this.handleClick(\r\n                  this.props.all,\r\n                  this.props.img,\r\n                  this.props.title,\r\n                  this.props.desc,\r\n                  this.props.price,\r\n                  quantity\r\n                );\r\n                window.location.reload();\r\n              } else {\r\n                this.props.history.push(\"/login\");\r\n              }\r\n            }}\r\n          >\r\n            <i className=\"material-icons\" style={{ fontSize: \"50px\" }}>\r\n              add_circle\r\n            </i>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cartItems: state.cartReducer.cartItems,\r\n    isLoggedin: state.auth.isLoggedIn,\r\n    recentItems: state.cartReducer.recentItems,\r\n    //items: state.items,\r\n    //products: state.filteredItems,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(withRouter(ProductsHome));\r\n"],"sourceRoot":""}