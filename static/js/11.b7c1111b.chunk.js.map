{"version":3,"sources":["components/register.component.js"],"names":["required","value","className","role","email","isEmail","firstname","length","match","lastname","location","mobileno","vpassword","Register","props","onChangeEmail","e","setState","target","onChangePassword","password","onChangefirstname","onChangelastname","onChangelocation","onChangemobileno","handleRegister","preventDefault","successful","form","validateAll","Emails","users","map","user","count","val","state","checkBtn","context","_errors","dispatch","register","then","alert","this","getAllUsers","message","src","alt","onSubmit","ref","c","htmlFor","style","color","type","name","onChange","validations","paddingLeft","paddingRight","borderRadius","onClick","history","push","disabled","loading","display","Component","connect","auth"],"mappings":"qPAUMA,EAAW,SAACC,GAChB,IAAKA,EACH,OACE,qBAAKC,UAAU,qBAAqBC,KAAK,QAAzC,sCAOAC,EAAQ,SAACH,GACb,IAAKI,kBAAQJ,GACX,OACE,qBAAKC,UAAU,qBAAqBC,KAAK,QAAzC,yCAOAG,EAAY,SAACL,GACjB,GAAIA,EAAMM,OAAS,GAAKN,EAAMM,OAAS,KAAON,EAAMO,MAAM,cACxD,OACE,qBAAKN,UAAU,qBAAqBC,KAAK,QAAzC,wCAOAM,EAAW,SAACR,GAChB,GAAIA,EAAMM,OAAS,GAAKN,EAAMM,OAAS,KAAON,EAAMO,MAAM,cACxD,OACE,qBAAKN,UAAU,qBAAqBC,KAAK,QAAzC,wCAOAO,EAAW,SAACT,GAChB,GAAIA,EAAMM,OAAS,GAAKN,EAAMM,OAAS,KAAON,EAAMO,MAAM,cACxD,OACE,qBAAKN,UAAU,qBAAqBC,KAAK,QAAzC,4CAOAQ,EAAW,SAACV,GAChB,IAAKA,EAAMO,MAAM,eACf,OACE,qBAAKN,UAAU,qBAAqBC,KAAK,QAAzC,0CAOAS,EAAY,SAACX,GACjB,IACGA,EAAMO,MACL,2EAGF,OACE,qBAAKN,UAAU,qBAAqBC,KAAK,QAAzC,SACE,+BACE,wEACA,8GAUJU,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAiBRC,cAAgB,SAACC,GACf,EAAKC,SAAS,CACZb,MAAOY,EAAEE,OAAOjB,SApBD,EAwBnBkB,iBAAmB,SAACH,GAClB,EAAKC,SAAS,CACZG,SAAUJ,EAAEE,OAAOjB,SA1BJ,EA8BnBoB,kBAAoB,SAACL,GACnB,EAAKC,SAAS,CACZX,UAAWU,EAAEE,OAAOjB,SAhCL,EAmCnBqB,iBAAmB,SAACN,GAClB,EAAKC,SAAS,CACZR,SAAUO,EAAEE,OAAOjB,SArCJ,EAwCnBsB,iBAAmB,SAACP,GAClB,EAAKC,SAAS,CACZP,SAAUM,EAAEE,OAAOjB,SA1CJ,EA6CnBuB,iBAAmB,SAACR,GAClB,EAAKC,SAAS,CACZN,SAAUK,EAAEE,OAAOjB,SA/CJ,EAmDnBwB,eAAiB,SAACT,GAChBA,EAAEU,iBAEF,EAAKT,SAAS,CACZU,YAAY,IAGd,EAAKC,KAAKC,cAEV,IAAIC,EAAS,EAAKhB,MAAMiB,MAAMC,KAAI,SAACC,GAAD,OAAUA,EAAK7B,SAC7C8B,EAAQ,EACZJ,EAAOE,KAAI,SAACG,GACNA,GAAO,EAAKC,MAAMhC,OACpB8B,OAGS,GAATA,EAC2C,IAAzC,EAAKG,SAASC,QAAQC,QAAQhC,QAChC,EAAKO,MACF0B,SACCC,YACE,EAAKL,MAAMhC,MACX,EAAKgC,MAAMhB,SACX,EAAKgB,MAAM9B,UACX,EAAK8B,MAAM3B,SACX,EAAK2B,MAAM1B,SACX,EAAK0B,MAAMzB,WAGd+B,MAAK,WACJ,EAAKzB,SAAS,CACZU,YAAY,QAWpB,EAAKV,SAAS,CACZU,YAAY,IAEdgB,MAAM,0BA7FR,EAAKP,MAAQ,CACXhC,MAAO,GACPgB,SAAU,GACVd,UAAW,GACXG,SAAU,GACVC,SAAU,GACVC,SAAU,KACVgB,YAAY,GAVG,E,qDAcnB,WACEiB,KAAK9B,MAAM0B,SAASK,iB,oBAqFtB,WAAU,IAAD,OACCC,EAAYF,KAAK9B,MAAjBgC,QAER,OACE,qBAAK5C,UAAU,YAAf,SACE,sBAAKA,UAAU,6BAAf,UACE,qBACE6C,IAAI,sGACJC,IAAI,cACJ9C,UAAU,qBAGZ,eAAC,IAAD,CACE+C,SAAUL,KAAKnB,eACfyB,IAAK,SAACC,GACJ,EAAKvB,KAAOuB,GAHhB,WAMIP,KAAKR,MAAMT,YACX,gCACE,sBAAKzB,UAAU,aAAf,UACE,uBAAOkD,QAAQ,QAAQC,MAAO,CAAEC,MAAO,SAAvC,mBAGA,cAAC,IAAD,CACEC,KAAK,OACLrD,UAAU,gBACVsD,KAAK,QACLvD,MAAO2C,KAAKR,MAAMhC,MAClBqD,SAAUb,KAAK7B,cACf2C,YAAa,CAAC1D,EAAUI,QAI5B,sBAAKF,UAAU,aAAf,UACE,uBAAOkD,QAAQ,YAAYC,MAAO,CAAEC,MAAO,SAA3C,uBAGA,cAAC,IAAD,CACEC,KAAK,YACLrD,UAAU,eACVsD,KAAK,YACLvD,MAAO2C,KAAKR,MAAM9B,UAClBmD,SAAUb,KAAKvB,kBACfqC,YAAa,CAAC1D,EAAUM,QAI5B,sBAAKJ,UAAU,aAAf,UACE,uBAAOkD,QAAQ,WAAWC,MAAO,CAAEC,MAAO,SAA1C,sBAGA,cAAC,IAAD,CACEC,KAAK,WACLrD,UAAU,eACVsD,KAAK,WACLvD,MAAO2C,KAAKR,MAAM3B,SAClBgD,SAAUb,KAAKtB,iBACfoC,YAAa,CAAC1D,EAAUS,QAI5B,sBAAKP,UAAU,aAAf,UACE,uBAAOkD,QAAQ,WAAWC,MAAO,CAAEC,MAAO,SAA1C,sBAGA,cAAC,IAAD,CACEC,KAAK,WACLrD,UAAU,eACVsD,KAAK,WACLvD,MAAO2C,KAAKR,MAAM1B,SAClB+C,SAAUb,KAAKrB,iBACfmC,YAAa,CAAC1D,EAAUU,QAI5B,sBAAKR,UAAU,aAAf,UACE,uBAAOkD,QAAQ,WAAWC,MAAO,CAAEC,MAAO,SAA1C,uBAGA,cAAC,IAAD,CACEC,KAAK,WACLrD,UAAU,eACVsD,KAAK,WACLvD,MAAO2C,KAAKR,MAAMzB,SAClB8C,SAAUb,KAAKpB,iBACfkC,YAAa,CAAC1D,EAAUW,QAI5B,sBAAKT,UAAU,aAAf,UACE,uBAAOkD,QAAQ,WAAWC,MAAO,CAAEC,MAAO,SAA1C,sBAGA,cAAC,IAAD,CACEC,KAAK,WACLrD,UAAU,eACVsD,KAAK,WACLvD,MAAO2C,KAAKR,MAAMhB,SAClBqC,SAAUb,KAAKzB,iBACfuC,YAAa,CAAC1D,EAAUY,QAI5B,qBAAKV,UAAU,aAAf,SACE,wBACEA,UAAU,gBACVmD,MAAO,CACLM,YAAa,GACbC,aAAc,GACdC,aAAc,IALlB,0BAcLf,GACC,sBAAK5C,UAAU,aAAf,UACE,qBACEA,UACE0C,KAAKR,MAAMT,WACP,sBACA,qBAENxB,KAAK,QANP,SAQG2C,IAEH,yBACE5C,UAAU,eACVmD,MAAO,CACLM,YAAa,GACbC,aAAc,GACdC,aAAc,IAEhBC,QAAS,WACP,EAAKhD,MAAMiD,QAAQC,KAAK,WAE1BC,SAAUrB,KAAKR,MAAM8B,QAVvB,UAYGtB,KAAKR,MAAM8B,SACV,sBAAMhE,UAAU,qCAElB,+CAIN,cAAC,IAAD,CACEmD,MAAO,CAAEc,QAAS,QAClBjB,IAAK,SAACC,GACJ,EAAKd,SAAWc,iB,GA9PTiB,aAiRRC,uBATf,SAAyBjC,GAGvB,MAAO,CACLU,QAHkBV,EAAMU,QAAlBA,QAINf,MAHgBK,EAAMkC,KAAhBvC,SAOKsC,CAAyBxD","file":"static/js/11.b7c1111b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { getAllUsers, register } from \"../actions/auth\";\r\nimport message from \"../reducers/message\";\r\n\r\nconst required = (value) => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = (value) => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst firstname = (value) => {\r\n  if (value.length < 3 || value.length > 20 || !value.match(\"[a-zA-Z_]+\")) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid Name.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst lastname = (value) => {\r\n  if (value.length < 3 || value.length > 20 || !value.match(\"[a-zA-Z_]+\")) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid Name.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst location = (value) => {\r\n  if (value.length < 3 || value.length > 20 || !value.match(\"[a-zA-Z_]+\")) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid Location.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mobileno = (value) => {\r\n  if (!value.match(\"^[0-9]{10}$\")) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid Number.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = (value) => {\r\n  if (\r\n    !value.match(\r\n      \"^.*(?=.{8,})(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=])[a-zA-Z0-9@#$%^&+=]*$\"\r\n    )\r\n  ) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        <ul>\r\n          <li>The password must be min 8 characters.</li>\r\n          <li>\r\n            Must contain atleast one uppercase, lowercase and a special\r\n            character.\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      location: \"\",\r\n      mobileno: null,\r\n      successful: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getAllUsers());\r\n  }\r\n\r\n  onChangeEmail = (e) => {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  };\r\n\r\n  onChangePassword = (e) => {\r\n    this.setState({\r\n      password: e.target.value,\r\n    });\r\n  };\r\n\r\n  onChangefirstname = (e) => {\r\n    this.setState({\r\n      firstname: e.target.value,\r\n    });\r\n  };\r\n  onChangelastname = (e) => {\r\n    this.setState({\r\n      lastname: e.target.value,\r\n    });\r\n  };\r\n  onChangelocation = (e) => {\r\n    this.setState({\r\n      location: e.target.value,\r\n    });\r\n  };\r\n  onChangemobileno = (e) => {\r\n    this.setState({\r\n      mobileno: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      successful: false,\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    var Emails = this.props.users.map((user) => user.email);\r\n    let count = 0;\r\n    Emails.map((val) => {\r\n      if (val == this.state.email) {\r\n        count++;\r\n      }\r\n    });\r\n    if (count == 0) {\r\n      if (this.checkBtn.context._errors.length === 0) {\r\n        this.props\r\n          .dispatch(\r\n            register(\r\n              this.state.email,\r\n              this.state.password,\r\n              this.state.firstname,\r\n              this.state.lastname,\r\n              this.state.location,\r\n              this.state.mobileno\r\n            )\r\n          )\r\n          .then(() => {\r\n            this.setState({\r\n              successful: true,\r\n            });\r\n          });\r\n        /* .catch(() => {\r\n            this.setState({\r\n              successful: false,\r\n            });\r\n            this.props.message = \"fail\";\r\n          }); */\r\n      }\r\n    } else {\r\n      this.setState({\r\n        successful: false,\r\n      });\r\n      alert(\"Email Already exists\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { message } = this.props;\r\n\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container signup\">\r\n          <img\r\n            src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTvsUqEpf_24cRqg3GIiF7mDMhqTqdMlalYfw&usqp=CAU\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={(c) => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\" style={{ color: \"white\" }}>\r\n                    Email\r\n                  </label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control \"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"firstname\" style={{ color: \"white\" }}>\r\n                    Firstname\r\n                  </label>\r\n                  <Input\r\n                    type=\"firstname\"\r\n                    className=\"form-control\"\r\n                    name=\"firstname\"\r\n                    value={this.state.firstname}\r\n                    onChange={this.onChangefirstname}\r\n                    validations={[required, firstname]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"lastname\" style={{ color: \"white\" }}>\r\n                    Lastname\r\n                  </label>\r\n                  <Input\r\n                    type=\"lastname\"\r\n                    className=\"form-control\"\r\n                    name=\"lastname\"\r\n                    value={this.state.lastname}\r\n                    onChange={this.onChangelastname}\r\n                    validations={[required, lastname]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"location\" style={{ color: \"white\" }}>\r\n                    Location\r\n                  </label>\r\n                  <Input\r\n                    type=\"location\"\r\n                    className=\"form-control\"\r\n                    name=\"location\"\r\n                    value={this.state.location}\r\n                    onChange={this.onChangelocation}\r\n                    validations={[required, location]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"mobileno\" style={{ color: \"white\" }}>\r\n                    Mobile No\r\n                  </label>\r\n                  <Input\r\n                    type=\"mobileno\"\r\n                    className=\"form-control\"\r\n                    name=\"mobileno\"\r\n                    value={this.state.mobileno}\r\n                    onChange={this.onChangemobileno}\r\n                    validations={[required, mobileno]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\" style={{ color: \"white\" }}>\r\n                    Password\r\n                  </label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button\r\n                    className=\"btn btn-info \"\r\n                    style={{\r\n                      paddingLeft: 50,\r\n                      paddingRight: 50,\r\n                      borderRadius: 50,\r\n                    }}\r\n                  >\r\n                    Sign Up\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {message}\r\n                </div>\r\n                <button\r\n                  className=\"btn btn-info\"\r\n                  style={{\r\n                    paddingLeft: 50,\r\n                    paddingRight: 50,\r\n                    borderRadius: 50,\r\n                  }}\r\n                  onClick={() => {\r\n                    this.props.history.push(\"/login\");\r\n                  }}\r\n                  disabled={this.state.loading}\r\n                >\r\n                  {this.state.loading && (\r\n                    <span className=\"spinner-border spinner-border-sm\"></span>\r\n                  )}\r\n                  <span>Login</span>\r\n                </button>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={(c) => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  const { message } = state.message;\r\n  const { users } = state.auth;\r\n  return {\r\n    message,\r\n    users,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Register);\r\n"],"sourceRoot":""}