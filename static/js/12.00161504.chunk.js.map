{"version":3,"sources":["products/Cart.js"],"names":["check","ids","Cart","state","checkStatus","handleCheck","e","target","checked","setState","filter","x","length","this","props","dispatch","viewCart","addedItems","isLoggedin","history","push","items","map","item","className","type","onChange","onClick","id","src","img","alt","style","width","height","title","desc","price","quantity","window","confirm","removeItem","location","reload","textAlign","fontSize","total","removeSelected","Component","connect","cartReducer","cartItems","auth","isLoggedIn"],"mappings":"0LAUIA,EAAQ,GACRC,EAAM,GACJC,E,4MACJC,MAAQ,CACNC,YAAa,I,EAOfC,YAAc,SAACC,GAETA,EAAEC,OAAOC,SACXP,EAAG,sBAAOA,GAAP,CAAYD,IAEf,EAAKS,SAAS,CAAEL,aAAa,KAE7BH,EAAMA,EAAIS,QAAO,SAACC,GAAD,OAAOA,GAAKX,KAGb,GAAdC,EAAIW,QACN,EAAKH,SAAS,CAAEL,YAAa,M,uDAfjC,WACES,KAAKC,MAAMC,SAASC,iB,oBAmBtB,WAAU,IACJC,EADG,OA0EP,OAxE6B,GAAzBJ,KAAKC,MAAMI,WACbL,KAAKC,MAAMK,QAAQC,KAAK,UAEpBP,KAAKC,MAAMO,QACbJ,EAAaJ,KAAKC,MAAMO,MAAMT,OAC5BC,KAAKC,MAAMO,MAAMC,KAAI,SAACC,GACpB,OACE,8BACE,qBAAIC,UAAU,yBAAd,UACE,uBAAOA,UAAU,mBAAjB,SACE,uBACEC,KAAK,WACLD,UAAU,mBACVE,SAAU,EAAKrB,YACfsB,QAAS,WACP3B,EAAQuB,EAAKK,QAInB,qBAAKJ,UAAU,WAAf,SACE,qBACEK,IAAKN,EAAKO,IACVC,IAAKR,EAAKO,IACVN,UAAU,GACVQ,MAAO,CAAEC,MAAO,QAASC,OAAQ,aAGrC,sBAAKV,UAAU,YAAf,UACE,sBAAMA,UAAU,QAAhB,SAAyBD,EAAKY,QAC9B,4BAAIZ,EAAKa,OACT,4BACE,8CAAYb,EAAKc,MAAjB,UAEF,4BACE,2CAAcd,EAAKe,cAErB,wBACEd,UAAU,eACVG,QAAS,WACP,EAAKb,MAAMK,QAAQC,KAAnB,oBAAqCG,EAAKK,MAH9C,kBAOU,IACV,wBACEJ,UAAU,iBACVG,QAAS,WAIO,GAHDY,OAAOC,QAClB,qCAGA,EAAK1B,MAAMC,SAAS0B,YAAWlB,EAAKK,KACpCW,OAAOG,SAASC,UAEhB,EAAK7B,MAAMK,QAAQC,KAAK,UAV9B,yBApCwCG,EAAKK,SA0DvD,wBAAQI,MAAO,CAAEY,UAAW,SAAUC,SAAU,QAAhD,yBAOJ,sBAAKrB,UAAU,YAAf,UACE,sBAAKA,UAAU,OAAf,UACE,mDACA,oBAAIA,UAAU,aAAd,SAA4BP,OAE9B,oBAAGO,UAAU,kBAAb,2BAAyCX,KAAKC,MAAMgC,MAApD,QAWA,uBACA,uBACCjC,KAAKV,MAAMC,YACV,8BACE,wBACEoB,UAAU,oBACVG,QAAS,WAIO,GAHDY,OAAOC,QAClB,oDAGA,EAAK1B,MAAMC,SAASgC,YAAe9C,IACnCsC,OAAOG,SAASC,UAEhB,EAAK7B,MAAMK,QAAQC,KAAK,UAV9B,+BAkBF,+B,GA1IS4B,aAwKJC,uBAvBS,SAAC9C,GACvB,MAAO,CAELkB,MAAOlB,EAAM+C,YAAYC,UACzBL,MAAO3C,EAAM+C,YAAYJ,MACzB5B,WAAYf,EAAMiD,KAAKC,cAkBZJ,CAAkD/C","file":"static/js/12.00161504.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  viewCart,\r\n  removeItem,\r\n  removeAllData,\r\n  removeSelected,\r\n  //viewCart,\r\n} from \"../actions/auth\";\r\nvar check = \"\";\r\nvar ids = [];\r\nclass Cart extends Component {\r\n  state = {\r\n    checkStatus: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(viewCart());\r\n    // window.location.reload();\r\n  }\r\n  handleCheck = (e) => {\r\n    // console.log(e.target.checked);\r\n    if (e.target.checked) {\r\n      ids = [...ids, check];\r\n      //console.log(ids);\r\n      this.setState({ checkStatus: true });\r\n    } else {\r\n      ids = ids.filter((x) => x != check);\r\n      // console.log(ids);\r\n    }\r\n    if (ids.length == 0) {\r\n      this.setState({ checkStatus: \"\" });\r\n    }\r\n    //console.log(ids);\r\n    //console.log(check);\r\n  };\r\n  render() {\r\n    let addedItems;\r\n    if (this.props.isLoggedin == false) {\r\n      this.props.history.push(\"/login\");\r\n    } else {\r\n      if (this.props.items) {\r\n        addedItems = this.props.items.length ? (\r\n          this.props.items.map((item) => {\r\n            return (\r\n              <div>\r\n                <li className=\"collection-item avatar\" key={item.id}>\r\n                  <label className=\"form-check-label\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"form-check-input\"\r\n                      onChange={this.handleCheck}\r\n                      onClick={() => {\r\n                        check = item.id;\r\n                      }}\r\n                    />\r\n                  </label>\r\n                  <div className=\"item-img\">\r\n                    <img\r\n                      src={item.img}\r\n                      alt={item.img}\r\n                      className=\"\"\r\n                      style={{ width: \"200px\", height: \"200px\" }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"item-desc\">\r\n                    <span className=\"title\">{item.title}</span>\r\n                    <p>{item.desc}</p>\r\n                    <p>\r\n                      <b>Price: ₹{item.price}/-</b>\r\n                    </p>\r\n                    <p>\r\n                      <b>Quantity: {item.quantity}</b>\r\n                    </p>\r\n                    <button\r\n                      className=\"btn btn-info\"\r\n                      onClick={() => {\r\n                        this.props.history.push(`/editCart/${item.id}`);\r\n                      }}\r\n                    >\r\n                      Edit\r\n                    </button>{\" \"}\r\n                    <button\r\n                      className=\"btn btn-danger\"\r\n                      onClick={() => {\r\n                        var result = window.confirm(\r\n                          \"Are you sure you want to Remove?\"\r\n                        );\r\n                        if (result == true) {\r\n                          this.props.dispatch(removeItem(item.id));\r\n                          window.location.reload();\r\n                        } else {\r\n                          this.props.history.push(\"/cart\");\r\n                        }\r\n                      }}\r\n                    >\r\n                      Remove\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <strong style={{ textAlign: \"center\", fontSize: \"50px\" }}>\r\n            Nothing :(\r\n          </strong>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"cart\">\r\n          <h5>You have ordered:</h5>\r\n          <ul className=\"collection\">{addedItems}</ul>\r\n        </div>\r\n        <p className=\"btn btn-warning\">Total : ₹{this.props.total}/-</p>\r\n        {/* <button\r\n          className=\"btn btn-danger\"\r\n          \r\n          onClick={() => {\r\n            this.props.dispatch(removeAllData(this.props.items));\r\n            window.location.reload();\r\n          }}\r\n        >\r\n          Remove All Data\r\n        </button> */}\r\n        <br />\r\n        <br />\r\n        {this.state.checkStatus ? (\r\n          <div>\r\n            <button\r\n              className=\"btn btn-secondary\"\r\n              onClick={() => {\r\n                var result = window.confirm(\r\n                  \"Are you sure you want to Remove Selected items?\"\r\n                );\r\n                if (result == true) {\r\n                  this.props.dispatch(removeSelected(ids));\r\n                  window.location.reload();\r\n                } else {\r\n                  this.props.history.push(\"/cart\");\r\n                }\r\n              }}\r\n            >\r\n              Remove Selected\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    //items: state.addedItems,\r\n    items: state.cartReducer.cartItems,\r\n    total: state.cartReducer.total,\r\n    isLoggedin: state.auth.isLoggedIn,\r\n    // quantity: state.quantity,\r\n    //addedItems: state.addedItems\r\n  };\r\n};\r\n/* const mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    removeItem: (id) => {\r\n      dispatch(removeItem(id));\r\n    },\r\n    addQuantity: (id) => {\r\n      dispatch(addQuantity(id));\r\n    },\r\n    subtractQuantity: (id) => {\r\n      dispatch(subtractQuantity(id));\r\n    },\r\n  };\r\n}; */\r\nexport default connect(mapStateToProps /* mapDispatchToProps */)(Cart);\r\n"],"sourceRoot":""}