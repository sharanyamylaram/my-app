{"version":3,"sources":["products/editCart.js"],"names":["data","quantity","editCart","state","load","img","props","items","map","item","title","desc","price","all","id","n","length","token","match","params","ind","i","console","log","handleChange","e","target","value","this","dispatch","viewCart","className","src","alt","style","textAlign","onClick","to","parseInt","isNaN","window","confirm","updateCart","history","push","location","reload","Component","connect","cartReducer","cartItems","total"],"mappings":"0LAGIA,EAAO,GACPC,EAAW,GACTC,E,4MACJC,MAAQ,G,EAIRC,KAAO,WAaL,IAZA,IAAIC,EAAM,EAAKC,MAAMC,MAAMC,KAAI,SAACC,GAAD,OAAUA,EAAKJ,OAC1CK,EAAQ,EAAKJ,MAAMC,MAAMC,KAAI,SAACC,GAAD,OAAUA,EAAKC,SAC5CC,EAAO,EAAKL,MAAMC,MAAMC,KAAI,SAACC,GAAD,OAAUA,EAAKE,QAC3CC,EAAQ,EAAKN,MAAMC,MAAMC,KAAI,SAACC,GAAD,OAAUA,EAAKG,SAC5CX,EAAW,EAAKK,MAAMC,MAAMC,KAAI,SAACC,GAAD,OAAUA,EAAKR,YAC/CY,EAAG,sBAAOR,GAAP,YAAeK,GAAf,YAAyBC,GAAzB,YAAkCC,GAAlC,YAA4CX,IAC/Ca,EAAK,EAAKR,MAAMC,MAAMC,KAAI,SAACC,GAAD,OAAUA,EAAKK,MAEzCC,EAAIF,EAAIG,OAAS,EACjBC,EAAQ,EAAKX,MAAMY,MAAMC,OAAOL,GAChCM,EAAM,GAEDC,EAAI,EAAGA,EAAIP,EAAGE,OAAQK,IACzBJ,GAASH,EAAGO,KACdD,EAAMC,GAGVrB,EAAKc,GAAKG,EACVjB,EAAKK,IAAMQ,EAAIO,GACfpB,EAAKU,MAAQG,EAAIO,EAAML,GACvBf,EAAKW,KAAOE,EAAIO,EAAML,EAAIA,GAC1Bf,EAAKY,MAAQC,EAAIO,EAAML,EAAIA,EAAIA,GAC/Bf,EAAKC,SAAWY,EAAIO,EAAML,EAAIA,EAAIA,EAAIA,GACtCO,QAAQC,IAAIvB,I,EAEdwB,aAAe,SAACC,GACdxB,EAAWwB,EAAEC,OAAOC,O,uDA9BtB,WACEC,KAAKtB,MAAMuB,SAASC,iB,oBAgCtB,WAAU,IAAD,OAKP,OACE,8BACE,gCACGF,KAAKxB,OACN,sBAAK2B,UAAU,OAAf,UACE,qBACEA,UAAU,eAEVC,IAAKhC,EAAKK,IACV4B,IAAKjC,EAAKU,QAEZ,uBAEA,sBAAKqB,UAAU,YAAf,UACE,sBAAMA,UAAU,GAAhB,SAAoB/B,EAAKU,QAEzB,4BAAIV,EAAKW,OAET,4BACE,8CAAYX,EAAKY,MAAjB,UAEF,oBAAGsB,MAAO,CAAEC,UAAW,UAAvB,UACG,IADH,WAGE,yBAAQC,QAASR,KAAKJ,aAAcO,UAAU,eAA9C,UACE,wBAAQJ,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,wBAIN,sBACEU,GAAG,IACHN,UAAU,kBACVK,QAAS,WACPnC,EAAWqC,SAASrC,GAChBsC,MAAMtC,KACRA,EAAW,GAGC,GADDuC,OAAOC,QAAQ,qCAE1B,EAAKnC,MAAMuB,SACTa,YACE1C,EAAKc,GACLd,EAAKK,IACLL,EAAKU,MACLV,EAAKW,KACLX,EAAKY,MACLX,IAGJ,EAAKK,MAAMqC,QAAQC,KAAK,SACxBJ,OAAOK,SAASC,UAEhB,EAAKxC,MAAMqC,QAAQC,KAAnB,oBAAqC5C,EAAKc,MAvBhD,8B,GA1EWiC,aAuHRC,uBAVS,SAAC7C,GACvB,MAAO,CAELI,MAAOJ,EAAM8C,YAAYC,UACzBC,MAAOhD,EAAM8C,YAAYE,SAMdH,CAAyB9C","file":"static/js/17.f7883f9c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateCart, viewCart } from \"../actions/auth\";\r\nvar data = {};\r\nvar quantity = \"\";\r\nclass editCart extends Component {\r\n  state = {};\r\n  componentDidMount() {\r\n    this.props.dispatch(viewCart());\r\n  }\r\n  load = () => {\r\n    var img = this.props.items.map((item) => item.img);\r\n    var title = this.props.items.map((item) => item.title);\r\n    var desc = this.props.items.map((item) => item.desc);\r\n    var price = this.props.items.map((item) => item.price);\r\n    var quantity = this.props.items.map((item) => item.quantity);\r\n    var all = [...img, ...title, ...desc, ...price, ...quantity];\r\n    var id = this.props.items.map((item) => item.id);\r\n    //console.log(all);\r\n    var n = all.length / 5;\r\n    var token = this.props.match.params.id;\r\n    var ind = \"\";\r\n\r\n    for (var i = 0; i < id.length; i++) {\r\n      if (token == id[i]) {\r\n        ind = i;\r\n      }\r\n    }\r\n    data.id = token;\r\n    data.img = all[ind];\r\n    data.title = all[ind + n];\r\n    data.desc = all[ind + n + n];\r\n    data.price = all[ind + n + n + n];\r\n    data.quantity = all[ind + n + n + n + n];\r\n    console.log(data);\r\n  };\r\n  handleChange = (e) => {\r\n    quantity = e.target.value;\r\n    //console.log(quantity);\r\n  };\r\n  render() {\r\n    /* if (this.props.items) {\r\n      this.load();\r\n    } */\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          {this.load()}\r\n          <div className=\"card\">\r\n            <img\r\n              className=\"card-img-top\"\r\n              /* style={{ width: \"300px\", height: \"300px\" }} */\r\n              src={data.img}\r\n              alt={data.title}\r\n            />\r\n            <br />\r\n            {/* <span style={{ display: \"none\" }}>{(id = data.id)}</span> */}\r\n            <div className=\"card-body\">\r\n              <span className=\"\">{data.title}</span>\r\n\r\n              <p>{data.desc}</p>\r\n\r\n              <p>\r\n                <b>Price: â‚¹{data.price}/-</b>\r\n              </p>\r\n              <p style={{ textAlign: \"center\" }}>\r\n                {\" \"}\r\n                Quantity\r\n                <select onClick={this.handleChange} className=\"form-control\">\r\n                  <option value=\"1\">1</option>\r\n                  <option value=\"2\">2</option>\r\n                  <option value=\"3\">3</option>\r\n                  <option value=\"4\">4</option>\r\n                  <option value=\"5\">5</option>\r\n                  <option value=\"6\">6</option>\r\n                </select>\r\n              </p>\r\n            </div>\r\n            <span\r\n              to=\"/\"\r\n              className=\"btn btn-success\"\r\n              onClick={() => {\r\n                quantity = parseInt(quantity);\r\n                if (isNaN(quantity)) {\r\n                  quantity = 1;\r\n                }\r\n                var result = window.confirm(\"Are you sure you want to submit?\");\r\n                if (result == true) {\r\n                  this.props.dispatch(\r\n                    updateCart(\r\n                      data.id,\r\n                      data.img,\r\n                      data.title,\r\n                      data.desc,\r\n                      data.price,\r\n                      quantity\r\n                    )\r\n                  );\r\n                  this.props.history.push(\"/cart\");\r\n                  window.location.reload();\r\n                } else {\r\n                  this.props.history.push(`/editCart/${data.id}`);\r\n                }\r\n              }}\r\n            >\r\n              Done\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    //items: state.addedItems,\r\n    items: state.cartReducer.cartItems,\r\n    total: state.cartReducer.total,\r\n    //isLoggedin: this.props.isLoggedIn,\r\n    // quantity: state.quantity,\r\n    //addedItems: state.addedItems\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(editCart);\r\n"],"sourceRoot":""}